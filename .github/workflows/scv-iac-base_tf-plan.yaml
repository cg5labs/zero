
# This workflow previews (tf-plan) the base VPC setup. 

name: SCV-IaC-Base_TF-Plan
env:
  ######################### DEFAULTS - DO NOT EDIT #####################
  TEMPLATE: 'scv-iac-base'
  AWSENV: dev
  AWS_REGION: 'ap-southeast-1'
  AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
  AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
  ############################# END ####################################

# Controls when the workflow will run
on:
  # Triggers the workflow on push or pull request events but only for the master branch
  # push:
  #   branches:
  #   - '!master'

  # Allows you to run this workflow manually from the Actions tab
  workflow_dispatch:

# A workflow run is made up of one or more jobs that can run sequentially or in parallel
jobs:
  # This workflow contains a single job called "build"

  tf-plan:
    # The type of runner that the job will run on
    runs-on: ubuntu-latest

    # runs within your Docker container
    container:
      image: docker://cg5labs/my-alpine:latest    # checkout your code from your repository
    
    steps:

    - name: Configure AWS Credentials
      uses: aws-actions/configure-aws-credentials@v1
      with:
        aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
        aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
        aws-session-token: ${{ secrets.AWS_SESSION_TOKEN }} # if you have/need it
        aws-region: ${{ env.AWS_REGION }}

    # Checks-out your repository under $GITHUB_WORKSPACE, so your job can access it
    - uses: actions/checkout@v2
 
    - name: Terraform init
      run: |
          cd "${GITHUB_WORKSPACE}/${TEMPLATE}" && \
          /usr/bin/terraform  init 

    - name: Terraform plan
      run: |
          cd "${GITHUB_WORKSPACE}/${TEMPLATE}" && \
          /usr/bin/terraform plan 
      
